//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.05.01 at 12:18:02 PM CEST 
//


package org.xmlspif.spif;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;


/**
 * <p>Java class for tagCategory complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tagCategory">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.xmlspif.org/spif}equivalentSecCategoryTag" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.xmlspif.org/spif}markingData" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.xmlspif.org/spif}markingQualifier" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.xmlspif.org/spif}excludedClass" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.xmlspif.org/spif}requiredCategory" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.xmlspif.org/spif}excludedCategory" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://www.xmlspif.org/spif}validity"/>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="lacv" use="required" type="{http://www.xmlspif.org/spif}lacv" />
 *       &lt;attribute name="userInput" type="{http://www.xmlspif.org/spif}userInput" />
 *       &lt;attribute name="requiredClass" type="{http://www.xmlspif.org/spif}className" />
 *       &lt;attribute name="obsolete" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="dateFormat" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;anyAttribute/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tagCategory", propOrder = {
    "equivalentSecCategoryTag",
    "markingData",
    "markingQualifier",
    "excludedClass",
    "requiredCategory",
    "excludedCategory"
})
public class TagCategory {

    protected List<EquivalentSecCategoryTag> equivalentSecCategoryTag;
    protected List<MarkingData> markingData;
    protected List<MarkingQualifier> markingQualifier;
    protected List<String> excludedClass;
    protected List<OptionalCategoryGroup> requiredCategory;
    protected List<OptionalCategoryData> excludedCategory;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "lacv", required = true)
    protected String lacv;
    @XmlAttribute(name = "userInput")
    protected UserInput userInput;
    @XmlAttribute(name = "requiredClass")
    protected String requiredClass;
    @XmlAttribute(name = "obsolete")
    protected Boolean obsolete;
    @XmlAttribute(name = "dateFormat")
    protected String dateFormat;
    @XmlAttribute(name = "notBefore")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar notBefore;
    @XmlAttribute(name = "notAfter")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar notAfter;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the equivalentSecCategoryTag property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the equivalentSecCategoryTag property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEquivalentSecCategoryTag().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EquivalentSecCategoryTag }
     * 
     * 
     */
    public List<EquivalentSecCategoryTag> getEquivalentSecCategoryTag() {
        if (equivalentSecCategoryTag == null) {
            equivalentSecCategoryTag = new ArrayList<EquivalentSecCategoryTag>();
        }
        return this.equivalentSecCategoryTag;
    }

    /**
     * Gets the value of the markingData property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the markingData property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMarkingData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MarkingData }
     * 
     * 
     */
    public List<MarkingData> getMarkingData() {
        if (markingData == null) {
            markingData = new ArrayList<MarkingData>();
        }
        return this.markingData;
    }

    /**
     * Gets the value of the markingQualifier property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the markingQualifier property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMarkingQualifier().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MarkingQualifier }
     * 
     * 
     */
    public List<MarkingQualifier> getMarkingQualifier() {
        if (markingQualifier == null) {
            markingQualifier = new ArrayList<MarkingQualifier>();
        }
        return this.markingQualifier;
    }

    /**
     * Gets the value of the excludedClass property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the excludedClass property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExcludedClass().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getExcludedClass() {
        if (excludedClass == null) {
            excludedClass = new ArrayList<String>();
        }
        return this.excludedClass;
    }

    /**
     * Gets the value of the requiredCategory property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the requiredCategory property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequiredCategory().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OptionalCategoryGroup }
     * 
     * 
     */
    public List<OptionalCategoryGroup> getRequiredCategory() {
        if (requiredCategory == null) {
            requiredCategory = new ArrayList<OptionalCategoryGroup>();
        }
        return this.requiredCategory;
    }

    /**
     * Gets the value of the excludedCategory property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the excludedCategory property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExcludedCategory().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OptionalCategoryData }
     * 
     * 
     */
    public List<OptionalCategoryData> getExcludedCategory() {
        if (excludedCategory == null) {
            excludedCategory = new ArrayList<OptionalCategoryData>();
        }
        return this.excludedCategory;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the lacv property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLacv() {
        return lacv;
    }

    /**
     * Sets the value of the lacv property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLacv(String value) {
        this.lacv = value;
    }

    /**
     * Gets the value of the userInput property.
     * 
     * @return
     *     possible object is
     *     {@link UserInput }
     *     
     */
    public UserInput getUserInput() {
        return userInput;
    }

    /**
     * Sets the value of the userInput property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserInput }
     *     
     */
    public void setUserInput(UserInput value) {
        this.userInput = value;
    }

    /**
     * Gets the value of the requiredClass property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequiredClass() {
        return requiredClass;
    }

    /**
     * Sets the value of the requiredClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequiredClass(String value) {
        this.requiredClass = value;
    }

    /**
     * Gets the value of the obsolete property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isObsolete() {
        if (obsolete == null) {
            return false;
        } else {
            return obsolete;
        }
    }

    /**
     * Sets the value of the obsolete property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setObsolete(Boolean value) {
        this.obsolete = value;
    }

    /**
     * Gets the value of the dateFormat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDateFormat() {
        return dateFormat;
    }

    /**
     * Sets the value of the dateFormat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDateFormat(String value) {
        this.dateFormat = value;
    }

    /**
     * Gets the value of the notBefore property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getNotBefore() {
        return notBefore;
    }

    /**
     * Sets the value of the notBefore property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setNotBefore(XMLGregorianCalendar value) {
        this.notBefore = value;
    }

    /**
     * Gets the value of the notAfter property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getNotAfter() {
        return notAfter;
    }

    /**
     * Sets the value of the notAfter property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setNotAfter(XMLGregorianCalendar value) {
        this.notAfter = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
